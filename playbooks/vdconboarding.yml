---
- name: VMware Cloud Director Onboarding - AWX Orchestration
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # ‚öôÔ∏è Variables de conexi√≥n al VCD ‚Äî inyectadas desde credenciales de AWX
    vcd_hostname: "{{ lookup('env', 'VCD_HOST') }}"
    vcd_org: "{{ lookup('env', 'VCD_ORG') }}"
    vcd_user: "{{ lookup('env', 'VCD_USER') }}"
    vcd_password: "{{ lookup('env', 'VCD_PASSWORD') }}"
    vcd_verify_ssl_certs: "{{ lookup('env', 'VCD_VERIFY_SSL_CERTS') | default(false) }}"
    vcd_api_version: "{{ lookup('env', 'VCD_API_VERSION') | default('39.1') }}"
    vcd_apikey: "{{ lookup('env', 'VCD_TOKEN') }}"
    vcd_metadata: "{{ lookup('env', 'VCD_METADATA_JSON') | from_json }}" # Aseg√∫rate de tener este valor en credenciales

    # üì¶ Datos din√°micos ‚Äî enviados desde survey o extra_vars
    Extra_orgFullName: "{{ orgFullName }}"
    Extra_orgVdcName: "{{ orgVdcName }}"
    Extra_cpuQuota: "{{ cpuQuota }}"
    Extra_memoryQuota: "{{ memoryQuota }}"
    Extra_storageQuota: "{{ storageQuota }}"
    Extra_mail: "{{ mail }}"
    Extra_firstName: "{{ firstName }}"
    Extra_lastName: "{{ lastName }}"
    Extra_networkType: "{{ networkType }}"
    Extra_trial: "{{ trial | default(false) }}"
    vmQuota: "2"

  tasks:
    # =======================================
    # Autenticaci√≥n directa a VCD (sin pyvcloud)
    # =======================================
    - name: Obtener token OAuth desde VCD
      ansible.builtin.uri:
        url: "{{ vcd_hostname }}/cloudapi/1.0.0/sessions/provider"
        method: POST
        headers:
          Accept: "application/*+json;version={{ vcd_api_version }},application/json;version={{ vcd_api_version }}"
          Authorization: "Basic {{ (vcd_user + '@' + vcd_org + ':' + vcd_password) | b64encode }}"
        return_content: yes
        validate_certs: false
      register: vcd_auth_response

    - name: Guardar token JWT
      ansible.builtin.set_fact:
        vcd_access_token: "{{ vcd_auth_response.x_vmware_vcloud_access_token }}"

    - name: Mostrar token temporal (debug)
      ansible.builtin.debug:
        msg: "Token JWT generado: {{ vcd_access_token | default('NO DEFINIDO') }}"

    - name: Validar autenticaci√≥n exitosa
      ansible.builtin.debug:
        msg: "‚úÖ Token obtenido correctamente para VCD: {{ vcd_access_token[:20] }}..."
    - name: Consolidar contexto VCD para roles
      ansible.builtin.set_fact:
        vcd_context:
          host: "{{ vcd_hostname }}"
          org: "{{ vcd_org }}"
          user: "{{ vcd_user }}"
          password: "{{ vcd_password }}"
          verify_ssl: "{{ vcd_verify_ssl_certs }}"
          api_version: "{{ vcd_api_version }}"
          apikey: "{{ vcd_apikey }}"
          access_token: "{{ vcd_access_token }}"
          orgFullName: "{{ Extra_orgFullName }}"
          orgVdcName: "{{ Extra_orgVdcName }}"
          cpuQuota: "{{ Extra_cpuQuota }}"
          memoryQuota: "{{ Extra_memoryQuota }}"
          storageQuota: "{{ Extra_storageQuota }}"
          mail: "{{ Extra_mail }}"
          firstName: "{{ Extra_firstName }}"
          lastName: "{{ Extra_lastName }}"
          networkType: "{{ Extra_networkType }}"
          trial: "{{ Extra_trial | default(false) }}"
          cleanup: "{{ cleanup | default(false) }}"
          vmQuota: "{{ vmQuota }}"
          metadata: "{{vcd_metadata}}"

    # =======================================
    # Ejecuci√≥n de roles (ya con token disponible)
    # =======================================
    - name: Ejecutar roles de onboarding
      include_role:
        name: "{{ item }}"
      vars:
        vcd: "{{ vcd_context }}"
      loop:
        - organization
        - orgvcd
        - network
