---
# ===========================================================
# 1. PREPARACI√ìN DE CONTEXTO Y NOMBRES DE RECURSOS
# ===========================================================
- name: 1.1 Construir nombres de recursos de red basados en el VDC
  ansible.builtin.set_fact:
    locationPrefix: "{{ vcd.orgVdcName.split('-')[0] }}"
    edgeGatewayName: "{{ vcd.orgVdcName.split('-')[0] }}-{{ vcd.orgFullName }}-{{ vcd.networkType }}"
    RoutedNetworkName: "{{ vcd.orgVdcName.split('-')[0] }}-{{ vcd.orgFullName }}-NET01"
    externalNetworkName: "{{ vcd.orgVdcName.split('-')[0] }}-{{ vcd.networkType }}-01" # Asumiendo un nombre est√°ndar de red externa
  delegate_to: localhost

- name: 1.2 Mostrar nombres de recursos a crear
  ansible.builtin.debug:
    msg:
      - "üìç locationPrefix: {{ locationPrefix }}"
      - "üì° Edge Gateway generado: {{ edgeGatewayName }}"
      - "üåê External Network esperada: {{ externalNetworkName }}"
      - "üè† Routed Network interna: {{ RoutedNetworkName }}"
  delegate_to: localhost

# ===========================================================
# 2. BLOQUE PRINCIPAL DE NETWORKING CON ROLLBACK
# ===========================================================
- name: 2.1 Proceso transaccional para Edge Gateway y Redes
  block: # INICIO del bloque transaccional
    # -----------------------------------------------------------
    # TAREA 2.2: VALIDAR SI EL EDGE YA EXISTE (Lectura - No necesita Rollback)
    # -----------------------------------------------------------
    - name: 2.2 Verificar si el Edge Gateway ya existe (CloudAPI)
      ansible.builtin.uri:
        url: "{{ vcd.host }}/cloudapi/1.0.0/edgeGateways?filter=name=={{ edgeGatewayName }}"
        method: GET
        headers:
          Accept: "application/json;version={{ vcd.api_version }}"
          Authorization: "Bearer {{ vcd.access_token }}"
        validate_certs: "{{ vcd.verify_ssl }}"
      register: edge_check
      failed_when: edge_check.status not in [200]
      delegate_to: localhost

    - name: 2.3 Determinar si el Edge Gateway ya existe
      ansible.builtin.set_fact:
        edge_exists: "{{ ('values' in edge_check.json) and (edge_check.json['values'] | length > 0) }}"
      delegate_to: localhost

    - name: 2.4 Mostrar estado del Edge Gateway
      ansible.builtin.debug:
        msg: "üîç Estado: {{ 'YA EXISTE ‚úÖ' if edge_exists else 'NO EXISTE üöÄ Se proceder√° a crear' }}"
      delegate_to: localhost

    - name: 2.5 (Opcional) Saltar la creaci√≥n si Edge ya existe
      ansible.builtin.meta: end_host
      when: edge_exists

    - name: 2.6 Mostrar variables antes de ejecutar PowerCLI
      ansible.builtin.debug:
        msg:
          - "üì° Servidor VCD: {{ vcd.host }}"
          - "üë§ Usuario: {{ vcd.user }}"
          - "üèóÔ∏è Org VDC: {{ vcd.orgVdcName }}"
          - "üèóÔ∏è EdgeName: {{ edgeGatewayName }}"
          - "üèóÔ∏è externalNetworkName: {{ externalNetworkName }}"
          - "üèóÔ∏è RoutedNetworkName: {{ RoutedNetworkName }}"
          - "üìù Descripci√≥n: Organizaci√≥n {{ vcd.orgFullName }} - creado por AWX"
      delegate_to: localhost
      connection: local

    # -----------------------------------------------------------
    # TAREA 2.7: CREACI√ìN DEL EDGE Y RED (Punto de fallo y activaci√≥n de Rollback)
    # -----------------------------------------------------------
    - name: 2.7 Ejecutar script PowerCLI para crear Edge Gateway y Routed Network
      ansible.builtin.win_shell: |
        Write-Host "=== Iniciando creaci√≥n de Edge Gateway (PowerCLI 13.3) ==="
        pwsh.exe -ExecutionPolicy Bypass -File "D:\Users\Jeferson Diaz\Documents\g6\Ansible\networkedge.ps1" `
          -Server "{{ vcd.host }}" `
          -Username "{{ vcd.user }}" `
          -Password "{{ vcd.password }}" `
          -OrgVdcName "{{ vcd.orgVdcName }}" `
          -EdgeName "{{ edgeGatewayName }}" `
          -ExternalNetworkName "{{ externalNetworkName }}" `
          -AccessToken "{{vcd.access_token}}" `
          -RoutedNetworkName "{{RoutedNetworkName}}"
      vars:
        ansible_connection: winrm
        ansible_host: "100.66.2.151"
        ansible_port: 5985
        ansible_user: "jeferson diaz"
        ansible_password: "Zero.eg9olj12*"
        ansible_winrm_transport: basic
        ansible_winrm_server_cert_validation: ignore
      register: edge_result
      failed_when: edge_result.rc != 0 or ('"success":false' in edge_result.stdout if edge_result.stdout else false)
      delegate_to: win-builder

    - name: 2.8 Extraer EDGE_ID y UPLINK_INFO desde salida PowerCLI
      ansible.builtin.set_fact:
        edge_id: >-
          {{ (edge_result.stdout_lines | select('search', '^EDGE_ID=') | map('regex_replace', '^EDGE_ID=', '') | list | first | default('')) }}
        uplink_info_raw: >-
          {{ (edge_result.stdout_lines | select('search', '^UPLINK_INFO=') | map('regex_replace', '^UPLINK_INFO=', '') | list | first | default('')) }}
      delegate_to: localhost

    - name: 2.9 Validar que EDGE_ID fue extra√≠do
      ansible.builtin.fail:
        msg: "‚ùå No se pudo extraer EDGE_ID desde la salida del script PowerCLI. Activando Rollback de Edge."
      when: edge_id == ''
      delegate_to: localhost

  # -----------------------------------------------------------
  # SECCI√ìN DE RESCATE (ROLLBACK EDGE)
  # Se ejecuta si cualquier tarea en el 'block' falla.
  # -----------------------------------------------------------
  rescue:
    - name: ‚ö†Ô∏è INICIANDO ROLLBACK EDGE ‚ö†Ô∏è - Eliminando Edge/Network parcial
      ansible.builtin.debug:
        msg: "Rollback activado debido a un fallo en la creaci√≥n de Edge Gateway o configuraci√≥n de servicios."
      delegate_to: localhost
      connection: local

    - name: 3.1 Eliminar Edge Gateway usando PowerCLI (SI LA CREACI√ìN SE INICI√ì)
      ansible.builtin.win_shell: >
        & 'D:\Users\Jeferson Diaz\Documents\g6\Ansible\delete_edge.ps1' -OrgVdcName '{{ vcd.orgVdcName }}' -EdgeName '{{ edge_id }}' -Server '{{ vcd.host }}' -Username '{{ vcd.user }}' -Password '{{ vcd.password }}'
      vars:
        ansible_connection: winrm
        ansible_host: "100.66.2.151"
        ansible_port: 5985
        ansible_user: "jeferson diaz"
        ansible_password: "Zero.eg9olj12*"
        ansible_winrm_transport: basic
        ansible_winrm_server_cert_validation: ignore
      # Solo se ejecuta el borrado si se logr√≥ extraer el EDGE_ID, lo que indica que la creaci√≥n S√ç comenz√≥.
      when: edge_id is defined and edge_id != ''
      ignore_errors: true
      delegate_to: win-builder

    - name: 3.2 Notificar Fallo Cr√≠tico despu√©s del Rollback Edge
      ansible.builtin.fail:
        msg: "‚ùå PROVISI√ìN NETWORKING FALLIDA. Se intent√≥ la limpieza/Rollback del Edge Gateway: {{ edgeGatewayName }}"
      delegate_to: localhost
      connection: local
